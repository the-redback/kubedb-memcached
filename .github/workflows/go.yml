name: Go
on: [push]
jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:

    - name: Check out code into the Go module directory
      uses: actions/checkout@v1

    - name: Set up Docker Buildx
      id: buildx
      uses: crazy-max/ghaction-docker-buildx@master
      with:
        version: latest

    - name: Available platforms
      run: echo ${{ steps.buildx.outputs.platforms }}

    - name: Build
      env:
        REGISTRY: kubedbci
        DOCKER_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
        USERNAME: 1gtm
      run: |
        docker login --username ${USERNAME} --password ${DOCKER_TOKEN}
        make push

    - name: Create Kubernetes cluster
      id: kind
      uses: engineerd/setup-kind@v0.1.0
      with:
        config: hack/e2e/cluster.yaml

    - name: Prepare cluster for testing
      id: local-path
      env:
        DOCKER_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
        USERNAME: 1gtm
        REGISTRY_SECRET: regcred
      run: |
        export KUBECONFIG="$(kind get kubeconfig-path)"
        echo
        echo "waiting for nodes to be ready ..."
        kubectl wait --for=condition=Ready nodes --all --timeout=5m
        kubectl get nodes
        echo
        echo "installing local-path provisioner ..."
        kubectl delete storageclass --all
        kubectl apply -f https://github.com/rancher/local-path-provisioner/raw/v0.0.10/deploy/local-path-storage.yaml
        kubectl wait --for=condition=Ready pods -n local-path-storage --all --timeout=5m
        echo
        echo "create docker-registry secret"
        kubectl create secret docker-registry ${REGISTRY_SECRET} --namespace=kube-system --docker-server=docker.pkg.github.com --docker-username=${USERNAME} --docker-password=${DOCKER_TOKEN}

    - name: Check out installer
      run: |
        cd ..
        git clone https://github.com/kubedb/installer.git
        cd installer
        git checkout master

    - name: Run e2e tests
      env:
        REGISTRY: kubedbci
        REGISTRY_SECRET: regcred
      run: |
        export KUBECONFIG="$(kind get kubeconfig-path)"
        make install
        kubectl get pods --all-namespaces
        make e2e-tests
